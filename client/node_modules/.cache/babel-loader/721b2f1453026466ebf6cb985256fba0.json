{"ast":null,"code":"import _defineProperty from \"D:\\\\Major\\\\crwn-clothing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { userActionTypes } from './user.types';\nconst INITIAL_STATE = {\n  currentUser: null\n};\n\nconst useReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case userActionTypes.SET_CURRENT_USER:\n      return _objectSpread({}, state, {\n        currentUser: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default useReducer;","map":{"version":3,"sources":["D:\\Major\\crwn-clothing\\src\\redux\\user\\user.reducer.js"],"names":["userActionTypes","INITIAL_STATE","currentUser","useReducer","state","action","type","SET_CURRENT_USER","payload"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,cAAhC;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE;AADK,CAAtB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,eAAe,CAACO,gBAArB;AACI,+BACOH,KADP;AAEIF,QAAAA,WAAW,EAAEG,MAAM,CAACG;AAFxB;;AAKJ;AAAS,aAAOJ,KAAP;AAPb;AASH,CAVD;;AAYA,eAAeD,UAAf","sourcesContent":["import { userActionTypes } from './user.types';\r\n\r\nconst INITIAL_STATE = {\r\n    currentUser: null\r\n};\r\n\r\nconst useReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case userActionTypes.SET_CURRENT_USER: \r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            };\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default useReducer;"]},"metadata":{},"sourceType":"module"}